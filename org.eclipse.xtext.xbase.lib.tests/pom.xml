<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.eclipse.xtext</groupId>
		<artifactId>org.eclipse.xtext.tycho.tests.parent</artifactId>
		<version>2.19.0-SNAPSHOT</version>
		<relativePath>../../xtext-eclipse/releng/org.eclipse.xtext.tycho.tests.parent</relativePath>
	</parent>
	<artifactId>org.eclipse.xtext.xbase.lib.tests</artifactId>
	<packaging>eclipse-test-plugin</packaging>
	<build>
		<plugins>
			<plugin>
				<!--
				Guava testlib is not a P2 plugin, so it does not have a MANIFEST.MF with exported packages.
				Therefore, we need to put it as a raw jar on our classpath.
				The maven-dependency-plugin allows to copy Jars from maven central into our local directory
				tree. We put it into lib/guava-testlib.jar and have a configured bundle classpath that points
				to this file. See MANIFEST.MF and build.properties.
				-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-libraries</id>
						<phase>initialize</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<item>
									<groupId>com.google.guava</groupId>
									<artifactId>guava-testlib</artifactId>
								</item>
							</artifactItems>
							<outputDirectory>lib</outputDirectory>
							<stripVersion>true</stripVersion>
							<overWriteReleases>true</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
</project>